#ifndef _RANDOM_H_
#define _RANDOM_H_

// A custom random number generator was required because some platforms provide 
// a very half-assed implementation of rand(). When the program was compiled 
// on mac, the random number generator basically returned the seed that was 
// given to it..
//
// These hex values were taken from the quantum random number generator at 
// AMU QRNG (qrng.anu.edu.au)

#define RANDOM_MAX 0xffff

int rand_index = 0;

const int random_nums[] = {
	0xe6b8,
	0xf914,
	0xbce5,
	0x8a82,
	0x5867,
	0x76b6,
	0xfc4d,
	0xb03d,
	0x3553,
	0xf7c9,
	0x1143,
	0x33d7,
	0x29db,
	0x056d,
	0x7dd4,
	0xc260,
	0xeae8,
	0x3cbd,
	0xdacf,
	0xcebb,
	0x6563,
	0x1b69,
	0x2067,
	0x6bb1,
	0x9c3e,
	0xcdb1,
	0xef8d,
	0x8fe4,
	0xefc6,
	0xa6d4,
	0x9fe6,
	0xf6d1,
	0xe735,
	0x5604,
	0xb78f,
	0x1b79,
	0xb4af,
	0x2922,
	0xd0c0,
	0xfe81,
	0xf6d5,
	0x066a,
	0x1d42,
	0x7967,
	0x9a27,
	0xa721,
	0x0d07,
	0x5e22,
	0x584c,
	0xe432,
	0xf5cc,
	0xa564,
	0xa46a,
	0x916d,
	0x5e24,
	0x64d8,
	0xe7ab,
	0x4bcf,
	0x0d6e,
	0xd4d9,
	0x919b,
	0x63ca,
	0xddde,
	0x0050,
	0x6bde,
	0x0d12,
	0x31df,
	0x8bf3,
	0xccde,
	0xaed7,
	0x3545,
	0x7b44,
	0x419d,
	0x7a9b,
	0x2dea,
	0x6e39,
	0xe74c,
	0x638e,
	0x6866,
	0x9c4d,
	0x005f,
	0x7ae5,
	0xd862,
	0x5d2b,
	0xef0e,
	0xe51b,
	0x1b0e,
	0xb8d5,
	0x41f3,
	0x0f0a,
	0xa0ca,
	0x0882,
	0x7505,
	0xabd0,
	0xdedd,
	0x8f51,
	0x4938,
	0xbd50,
	0x3b26,
	0x15bc,
	0xc1dc,
	0x4590,
	0xc517,
	0x93d9,
	0x260c,
	0x7eeb,
	0xc271,
	0x2f2a,
	0x0340,
	0x8ddf,
	0x7d96,
	0x2a90,
	0x8a61,
	0x078f,
	0x237e,
	0x2883,
	0x852a,
	0xc835,
	0x8ade,
	0xe818,
	0x1f05,
	0x71f7,
	0xf01a,
	0xf39a,
	0x5129,
	0x28ac,
	0xf6c9,
	0x8ed8,
	0x7dc7,
	0xd6aa,
	0x1ccc,
	0xf4df,
	0x30f6,
	0xc7db,
	0x9e25,
	0xb293,
	0xddab,
	0xb5f7,
	0x167d,
	0xd896,
	0xc2bf,
	0x7b87,
	0x7e5a,
	0x22dc,
	0x29ae,
	0xcb16,
	0x0a67,
	0xb6f5,
	0x2bdf,
	0x9173,
	0x6b4a,
	0x491c,
	0xea7d,
	0xa70c,
	0x607f,
	0xc28b,
	0x0c4b,
	0x136a,
	0xab96,
	0xcd1d,
	0x3d07,
	0x6605,
	0x37ca,
	0x00ed,
	0xa07b,
	0xa50d,
	0x135a,
	0xa51a,
	0x197a,
	0x0c18,
	0x3eb2,
	0x9aad,
	0x2e8a,
	0xab49,
	0xc2fa,
	0x1230,
	0x3ac2,
	0xff4d,
	0x79bf,
	0x17a2,
	0x6a21,
	0x5166,
	0x562b,
	0x9705,
	0x9479,
	0x9b74,
	0x59fc,
	0x98ef,
	0x145e,
	0x4ba5,
	0xeea8,
	0x94b7,
	0x4d74,
	0xd856,
	0x4486,
	0x6524,
	0x3386,
	0x9819,
	0x8ff3,
	0x8159,
	0x8b17,
	0x3a0b,
	0x17d7,
	0x968b,
	0xbaa6,
	0x2703,
	0x793f,
	0x110b,
	0x0b6b,
	0xed49,
	0xde58,
	0x2162,
	0x23a8,
	0x684c,
	0xc0ad,
	0x9f33,
	0xdd43,
	0x511e,
	0xf70c,
	0x93c8,
	0x508b,
	0xcd23,
	0xe1f3,
	0x6b30,
	0xe9ea,
	0x0a9f,
	0x6bff,
	0x3c44,
	0x741d,
	0x93a1,
	0xb483,
	0x03a4,
	0x8da3,
	0x6d88,
	0x115c,
	0x9385,
	0xfa93,
	0xa2ec,
	0xeb64,
	0xf606,
	0xd677,
	0x8690,
	0x2b78,
	0x748a,
	0xf971,
	0xa637,
	0x1215,
	0xcf60,
	0x7a62,
	0x93a6,
	0xa6a4,
	0xe5c3,
	0x9b8f,
	0x4da9,
	0x7339,
	0x038c
};

int get_random() {
	if (rand_index > 255) rand_index = 0;
	return random_nums[rand_index++];
}

float get_random_float() {
	return ((float)get_random())/RANDOM_MAX;
}
#endif
